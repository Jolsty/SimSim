\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\babel@aux{italian}{}
\babel@aux{italian}{}
\citation{controllo_accessi}
\citation{crescita_controllo_accessi}
\citation{smart_objects}
\citation{IoT}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduzione}{1}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cap:introduzione}{{1}{1}{Introduzione}{chapter.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Esempio di sistema IoT\relax }}{2}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:iot_diagram}{{1}{2}{Esempio di sistema IoT\relax }{figure.caption.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Nascita ed evoluzione del progetto all'interno dell'azienda}{2}{section.1.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Modello 3D della scatola contenente il prototipo. Un ringraziamento alla mia collega Cecilia per la sua creazione\relax }}{3}{figure.caption.3}}
\newlabel{fig:simsim_3d}{{2}{3}{Modello 3D della scatola contenente il prototipo. Un ringraziamento alla mia collega Cecilia per la sua creazione\relax }{figure.caption.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Prototipo di SimSim\relax }}{3}{figure.caption.4}}
\newlabel{fig:simsim}{{3}{3}{Prototipo di SimSim\relax }{figure.caption.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Requisiti del progetto}{4}{section.1.2}}
\newlabel{sec:req}{{1.2}{4}{Requisiti del progetto}{section.1.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Sequenza temporale delle attivit\IeC {\`a} svolte. Creato con il tool \url  {https://time.graphics/it/editor}\relax }}{5}{figure.caption.5}}
\newlabel{fig:timeline}{{4}{5}{Sequenza temporale delle attività svolte. Creato con il tool \url {https://time.graphics/it/editor}\relax }{figure.caption.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Casi d'uso del sistema\relax }}{5}{figure.caption.6}}
\newlabel{fig:usecase}{{5}{5}{Casi d'uso del sistema\relax }{figure.caption.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Diagramma di flusso del sistema\relax }}{6}{figure.caption.7}}
\newlabel{fig:flowchart}{{6}{6}{Diagramma di flusso del sistema\relax }{figure.caption.7}{}}
\citation{raspbian}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Sviluppo del sistema embedded}{7}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cap2}{{2}{7}{Sviluppo del sistema embedded}{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Raspberry Pi}{7}{section.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Scheda Raspberry Pi\relax }}{7}{figure.caption.9}}
\newlabel{fig:raspi}{{8}{7}{Scheda Raspberry Pi\relax }{figure.caption.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Schema del circuito\relax }}{8}{figure.caption.8}}
\newlabel{fig:schematics}{{7}{8}{Schema del circuito\relax }{figure.caption.8}{}}
\citation{arduino_storia}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Arduino UNO}{9}{section.2.2}}
\citation{sistemi_embedded_atrent}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Scheda Arduino UNO\relax }}{10}{figure.caption.10}}
\newlabel{fig:uno}{{9}{10}{Scheda Arduino UNO\relax }{figure.caption.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Arduino Programming Language}{10}{subsection.2.2.1}}
\citation{RTClib}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Real-time Clock}{11}{section.2.3}}
\citation{rf}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Tiny RTC\relax }}{12}{figure.caption.11}}
\newlabel{fig:tinyRTC}{{10}{12}{Tiny RTC\relax }{figure.caption.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Tiny RTC e Arduino UNO\relax }}{12}{figure.caption.11}}
\newlabel{fig:tinyRTC_uno}{{11}{12}{Tiny RTC e Arduino UNO\relax }{figure.caption.11}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Trasmettitore-ricevitore RF}{12}{section.2.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Modulo transceiver MX-05V/XD-RF-5V\relax }}{12}{figure.caption.12}}
\newlabel{fig:rx_tx_module}{{12}{12}{Modulo transceiver MX-05V/XD-RF-5V\relax }{figure.caption.12}{}}
\newlabel{lst:trasm}{{2.1}{13}{L'Arduino utilizza il trasmettitore per trasmettere i codici clonati dai telecomandi. Il codice viene inviato per 4 volte ogni 3 secondi}{lstlisting.2.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.1}L'Arduino utilizza il trasmettitore per trasmettere i codici clonati dai telecomandi. Il codice viene inviato per 4 volte ogni 3 secondi}{13}{lstlisting.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Ricevitore RF con telecomando e Arduino UNO\relax }}{13}{figure.caption.13}}
\newlabel{fig:rf_uno}{{13}{13}{Ricevitore RF con telecomando e Arduino UNO\relax }{figure.caption.13}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.5}Servomotore}{14}{section.2.5}}
\newlabel{sec:servomotore}{{2.5}{14}{Servomotore}{section.2.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Servomotore\relax }}{14}{figure.caption.14}}
\newlabel{fig:servo}{{14}{14}{Servomotore\relax }{figure.caption.14}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.1}PWM}{15}{subsection.2.5.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Segnali PWM e comando analogWrite(int value) per generarli con l'Arduino. La \textit  {Veff} \IeC {\`e} rappresentata dalla linea orizzontale rossa che copre il segnale digitale\relax }}{15}{figure.caption.15}}
\newlabel{fig:pwm}{{15}{15}{Segnali PWM e comando analogWrite(int value) per generarli con l'Arduino. La \textit {Veff} è rappresentata dalla linea orizzontale rossa che copre il segnale digitale\relax }{figure.caption.15}{}}
\citation{servo}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Segnali PWM nel servomotore\relax }}{16}{figure.caption.16}}
\newlabel{fig:servo_pwm}{{16}{16}{Segnali PWM nel servomotore\relax }{figure.caption.16}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Servomotore e Arduino UNO\relax }}{17}{figure.caption.17}}
\newlabel{fig:servo_uno}{{17}{17}{Servomotore e Arduino UNO\relax }{figure.caption.17}{}}
\newlabel{lst:servo}{{2.2}{17}{Esempio di codice per controllare il servomotore: innanzittutto il servo viene collegato al pin 9 dell'Arduino e viene fatto ruotare di 180 gradi da una parte (aprendo la porta); dopo 5 secondi viene fatto ruotare di 180 gradi dalla parte opposta}{lstlisting.2.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.2}Esempio di codice per controllare il servomotore: innanzittutto il servo viene collegato al pin 9 dell'Arduino e viene fatto ruotare di 180 gradi da una parte (aprendo la porta); dopo 5 secondi viene fatto ruotare di 180 gradi dalla parte opposta}{17}{lstlisting.2.2}}
\@writefile{toc}{\contentsline {section}{\numberline {2.6}RFID Reader}{17}{section.2.6}}
\citation{rfid_lib}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Lettore RFID MFRC522\relax }}{18}{figure.caption.18}}
\newlabel{fig:mfrc522}{{18}{18}{Lettore RFID MFRC522\relax }{figure.caption.18}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces RFID con dei tag e Arduino UNO\relax }}{19}{figure.caption.19}}
\newlabel{fig:rfid_uno}{{19}{19}{RFID con dei tag e Arduino UNO\relax }{figure.caption.19}{}}
\newlabel{lst:rfid}{{2.3}{19}{Procedura per leggere i tag. Essi vengono letti un byte alla volta e poi vengono concatenati in una stringa accessibile dal resto del programma}{lstlisting.2.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.3}Procedura per leggere i tag. Essi vengono letti un byte alla volta e poi vengono concatenati in una stringa accessibile dal resto del programma}{19}{lstlisting.2.3}}
\@writefile{toc}{\contentsline {section}{\numberline {2.7}Display LCD 16x2}{19}{section.2.7}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Display LCD 16x2\relax }}{19}{figure.caption.20}}
\newlabel{fig:16x2}{{20}{19}{Display LCD 16x2\relax }{figure.caption.20}{}}
\citation{lcd_lib}
\citation{wire}
\newlabel{lst:lcd}{{2.4}{20}{L'Arduino inizializza la comunicazione con l'LCD tramite il protocollo I$^2$C e chiama la funzione lcdHomeMode() che semplicemente spegne la retroilluminazione e pulisce il testo}{lstlisting.2.4}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.4}L'Arduino inizializza la comunicazione con l'LCD tramite il protocollo I$^2$C e chiama la funzione lcdHomeMode() che semplicemente spegne la retroilluminazione e pulisce il testo.}{20}{lstlisting.2.4}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Pinout di un display LCD 16x2 con il controller HD44780\relax }}{21}{table.caption.21}}
\newlabel{tab:lcd_pinout}{{1}{21}{Pinout di un display LCD 16x2 con il controller HD44780\relax }{table.caption.21}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.8}Keypad}{21}{section.2.8}}
\newlabel{fig:keypad}{{21a}{21}{\relax }{figure.caption.22}{}}
\newlabel{sub@fig:keypad}{{a}{21}{\relax }{figure.caption.22}{}}
\newlabel{fig:keypad_matrix}{{21b}{21}{\relax }{figure.caption.22}{}}
\newlabel{sub@fig:keypad_matrix}{{b}{21}{\relax }{figure.caption.22}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces \textbf  {(a)} Tastierino 4x4 e \textbf  {(b)} la sua rappresentazione a matrice\relax }}{21}{figure.caption.22}}
\newlabel{fig:keypad_both}{{21}{21}{\textbf {(a)} Tastierino 4x4 e \textbf {(b)} la sua rappresentazione a matrice\relax }{figure.caption.22}{}}
\citation{keypad_lib}
\newlabel{lst:keypad}{{2.5}{22}{Configurazione dei pin del tastierino. In questo caso non viene utilizzata l'ultima colonna con le lettere}{lstlisting.2.5}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.5}Configurazione dei pin del tastierino. In questo caso non viene utilizzata l'ultima colonna con le lettere.}{22}{lstlisting.2.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Keypad e Arduino UNO\relax }}{22}{figure.caption.23}}
\newlabel{fig:keypad_uno}{{22}{22}{Keypad e Arduino UNO\relax }{figure.caption.23}{}}
\citation{esp_ds}
\citation{uno_specs}
\@writefile{toc}{\contentsline {section}{\numberline {2.9}ESP8266}{23}{section.2.9}}
\newlabel{sec:esp8266}{{2.9}{23}{ESP8266}{section.2.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces L'ESP-01 di Ai-Thinker\relax }}{23}{figure.caption.24}}
\newlabel{fig:esp01}{{23}{23}{L'ESP-01 di Ai-Thinker\relax }{figure.caption.24}{}}
\citation{at_fw}
\@writefile{lof}{\contentsline {figure}{\numberline {24}{\ignorespaces ESP-01 Pinout\relax }}{24}{figure.2.24}}
\newlabel{fig:esp_pinout_img}{{24}{24}{ESP-01 Pinout\relax }{figure.2.24}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Funzioni dei pin dell'ESP-01\relax }}{24}{table.2.2}}
\newlabel{tab:esp01_pinout}{{2}{24}{Funzioni dei pin dell'ESP-01\relax }{table.2.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {25}{\ignorespaces ESP-01 e Arduino UNO\relax }}{24}{figure.caption.25}}
\newlabel{fig:esp_uno}{{25}{24}{ESP-01 e Arduino UNO\relax }{figure.caption.25}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Modalit\IeC {\`a} di funzionamento dell'ESP-01\relax }}{25}{table.caption.26}}
\newlabel{tab:esp01_modes}{{3}{25}{Modalità di funzionamento dell'ESP-01\relax }{table.caption.26}{}}
\newlabel{lst:esp01_setup}{{2.6}{25}{Riprogrammazione dell'ESP-01 con il codice proprio. All'accensione, il dispositivo non fa altro che connettersi alla rete WiFi locale. Per poter fare ciò, è stata utilizzata una libreria molto bene documentata (\url {https://arduino-esp8266.readthedocs.io/en/latest/esp8266wifi/readme.html})}{lstlisting.2.6}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.6}Riprogrammazione dell'ESP-01 con il codice proprio. All'accensione, il dispositivo non fa altro che connettersi alla rete WiFi locale. Per poter fare ci\IeC {\`o}, \IeC {\`e} stata utilizzata una libreria molto bene documentata (\url  {https://arduino-esp8266.readthedocs.io/en/latest/esp8266wifi/readme.html})}{25}{lstlisting.2.6}}
\newlabel{lst:esp01_listen}{{2.7}{26}{L'ESP-01 si mette in ascolto sulla porta seriale collegata all'Arduino. Esso chiama la funzione corretta in base al formato della stringa ricevuta}{lstlisting.2.7}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.7}L'ESP-01 si mette in ascolto sulla porta seriale collegata all'Arduino. Esso chiama la funzione corretta in base al formato della stringa ricevuta.}{26}{lstlisting.2.7}}
\newlabel{lst:uno_checkCardSerial}{{2.8}{26}{L'Arduino manda all'ESP-01 il seriale della tessera in formato JSON e aspetta la risposta con lo status code. Se statusCode = 200 allora mette la variabile allowed a \textquotedblleft {} true \textquotedblright {}. La funzione printBodyToESP si può vedere nel Listato \ref {lst:uno_printBodyToESP}}{lstlisting.2.8}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.8}L'Arduino manda all'ESP-01 il seriale della tessera in formato JSON e aspetta la risposta con lo status code. Se statusCode = 200 allora mette la variabile allowed a \textquotedblleft {} true \textquotedblright {}. La funzione printBodyToESP si pu\IeC {\`o} vedere nel Listato \ref  {lst:uno_printBodyToESP}}{26}{lstlisting.2.8}}
\newlabel{lst:uno_sendLog}{{2.9}{26}{L'Arduino manda all'ESP-01 il log in formato JSON e aspetta la risposta con lo status code. La funzione printBodyToESP si può vedere nel Listato \ref {lst:uno_printBodyToESP}}{lstlisting.2.9}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.9}L'Arduino manda all'ESP-01 il log in formato JSON e aspetta la risposta con lo status code. La funzione printBodyToESP si pu\IeC {\`o} vedere nel Listato \ref  {lst:uno_printBodyToESP}.}{26}{lstlisting.2.9}}
\citation{softwareserial_lib}
\newlabel{lst:esp_checkTessera}{{2.10}{27}{L'ESP-01 manda una richiesta POST all'endpoint specificato. Il corpo della richiesta è in formato JSON e include il seriale e il tipo della tessera che si vuole verificare}{lstlisting.2.10}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.10}L'ESP-01 manda una richiesta POST all'endpoint specificato. Il corpo della richiesta \IeC {\`e} in formato JSON e include il seriale e il tipo della tessera che si vuole verificare.}{27}{lstlisting.2.10}}
\newlabel{lst:esp_sendLog}{{2.11}{27}{L'ESP-01 manda una richiesta POST all'endpoint specificato. Il corpo della richiesta è in formato JSON e rappresenta il log}{lstlisting.2.11}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.11}L'ESP-01 manda una richiesta POST all'endpoint specificato. Il corpo della richiesta \IeC {\`e} in formato JSON e rappresenta il log.}{27}{lstlisting.2.11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.9.1}Comunicazione tra l'Arduino UNO e l'ESP-01 }{27}{subsection.2.9.1}}
\newlabel{lst:uno_ss_setup}{{2.12}{27}{Inizializzazione della comunicazione seriale tra Arduino UNO e ESP-01}{lstlisting.2.12}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.12}Inizializzazione della comunicazione seriale tra Arduino UNO e ESP-01}{27}{lstlisting.2.12}}
\newlabel{lst:uno_printBodyToESP}{{2.13}{28}{La funzione printBodyToESP. Essa manda all'ESP-01 (tramite l'oggetto SoftwareSerial) la stringa ricevuta tra gli argomenti e poi aspetta per la risposta. Dopo aver ricevuto la risposta restituisce statusCode}{lstlisting.2.13}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.13}La funzione printBodyToESP. Essa manda all'ESP-01 (tramite l'oggetto SoftwareSerial) la stringa ricevuta tra gli argomenti e poi aspetta per la risposta. Dopo aver ricevuto la risposta restituisce statusCode.}{28}{lstlisting.2.13}}
\@writefile{toc}{\contentsline {section}{\numberline {2.10}Protocolli di comunicazione tra dispositivi}{29}{section.2.10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.10.1}I$^2$C}{29}{subsection.2.10.1}}
\newlabel{sec:i2c}{{2.10.1}{29}{I$^2$C}{subsection.2.10.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {26}{\ignorespaces I$^2$C Bus\relax }}{29}{figure.caption.27}}
\newlabel{fig:i2c_bus}{{26}{29}{I$^2$C Bus\relax }{figure.caption.27}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {27}{\ignorespaces Esempio di messaggio inviato sulla linea SDA con il protocollo I$^2$C \relax }}{30}{figure.caption.28}}
\newlabel{fig:i2c_data_bus}{{27}{30}{Esempio di messaggio inviato sulla linea SDA con il protocollo I$^2$C \relax }{figure.caption.28}{}}
\citation{i2c_vs_spi}
\citation{i2c_vs_spi}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.10.2}SPI}{31}{subsection.2.10.2}}
\newlabel{sec:spi}{{2.10.2}{31}{SPI}{subsection.2.10.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces I$^2$C vs SPI\cite  {i2c_vs_spi}\relax }}{31}{table.caption.29}}
\newlabel{tab:i2c_vs_spi}{{4}{31}{I$^2$C vs SPI\cite {i2c_vs_spi}\relax }{table.caption.29}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Sviluppo del sito web}{32}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cap3}{{3}{32}{Sviluppo del sito web}{chapter.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {28}{\ignorespaces Screenshot fatto durante la fase di test del sito web\relax }}{32}{figure.caption.30}}
\newlabel{fig:esempio_libro_soci}{{28}{32}{Screenshot fatto durante la fase di test del sito web\relax }{figure.caption.30}{}}
\citation{nodejs}
\citation{path}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Back-End}{33}{section.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}Tecnologie utilizzate}{33}{subsection.3.1.1}}
\citation{express}
\newlabel{lst:path}{{3.1}{34}{Uso del modulo \emph {path}}{lstlisting.3.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.1}Uso del modulo \emph  {path}.}{34}{lstlisting.3.1}}
\newlabel{lst:middleware}{{3.2}{34}{Middleware per caricare la pagina \textquotedblleft {} 404.ejs \textquotedblright {} nel caso in cui un utente provi ad accedere ad una pagina non esistente}{lstlisting.3.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.2}Middleware per caricare la pagina \textquotedblleft {} 404.ejs \textquotedblright {} nel caso in cui un utente provi ad accedere ad una pagina non esistente}{34}{lstlisting.3.2}}
\newlabel{lst:routing}{{3.3}{34}{Implementazione di un endpoint. Quando viene fatta una richiesta GET all'endpoint \emph {\textquotedblleft {} / \textquotedblright {}} allora, come risposta, l'applicazione invia all'utente un file chiamato \textquotedblleft {} index.ejs \textquotedblright {} (che rappresenta la homepage) che viene poi caricato dal suo browser}{lstlisting.3.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.3}Implementazione di un endpoint. Quando viene fatta una richiesta GET all'endpoint \emph  {\textquotedblleft {} / \textquotedblright {}} allora, come risposta, l'applicazione invia all'utente un file chiamato \textquotedblleft {} index.ejs \textquotedblright {} (che rappresenta la homepage) che viene poi caricato dal suo browser}{34}{lstlisting.3.3}}
\citation{bodyparser}
\citation{ejs}
\citation{mongoose}
\newlabel{lst:server}{{3.4}{35}{Creazione di un server con il modulo \emph {express}}{lstlisting.3.4}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.4}Creazione di un server con il modulo \emph  {express}}{35}{lstlisting.3.4}}
\newlabel{lst:bodyparser}{{3.5}{35}{Uso del modulo body-parser. Vengono definiti dei middleware che analizzano i contenuti delle richieste HTTP}{lstlisting.3.5}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.5}Uso del modulo body-parser. Vengono definiti dei middleware che analizzano i contenuti delle richieste HTTP.}{35}{lstlisting.3.5}}
\newlabel{lst:ejs_server}{{3.6}{35}{Impostazione del \textquotedblleft {} view engine \textquotedblright {}}{lstlisting.3.6}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.6}Impostazione del \textquotedblleft {} view engine \textquotedblright {}}{35}{lstlisting.3.6}}
\newlabel{lst:ejs_client}{{3.7}{36}{Uso di \emph {EJS} nel lato client. Il codice JavaScript all'interno della pagina HTML è racchiuso tra \textquotedblleft {} $<$\% \%$>$ \textquotedblright {} e l'oggetto \textquotedblleft {} tessere \textquotedblright {} è stato passato dal server in formato JSON. Gli oggetti passati dal server sono racchiusi tra \textquotedblleft {} $<$\%= \%$>$ \textquotedblright {}}{lstlisting.3.7}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.7}Uso di \emph  {EJS} nel lato client. Il codice JavaScript all'interno della pagina HTML \IeC {\`e} racchiuso tra \textquotedblleft {} $<$\% \%$>$ \textquotedblright {} e l'oggetto \textquotedblleft {} tessere \textquotedblright {} \IeC {\`e} stato passato dal server in formato JSON. Gli oggetti passati dal server sono racchiusi tra \textquotedblleft {} $<$\%= \%$>$ \textquotedblright {}}{36}{lstlisting.3.7}}
\@writefile{lof}{\contentsline {figure}{\numberline {29}{\ignorespaces Esempio delle interazioni tra i componenti del pattern MVC\relax }}{36}{figure.caption.33}}
\newlabel{fig:mvc}{{29}{36}{Esempio delle interazioni tra i componenti del pattern MVC\relax }{figure.caption.33}{}}
\newlabel{lst:model}{{3.8}{37}{Creazione del modello dei log con \emph {mongoose}}{lstlisting.3.8}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.8}Creazione del modello dei log con \emph  {mongoose}}{37}{lstlisting.3.8}}
\citation{mongodb}
\citation{mongodb_driver}
\newlabel{lst:view}{{3.9}{38}{Parte del codice HTML della vista creata per presentare le tessere all'utente}{lstlisting.3.9}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.9}Parte del codice HTML della vista creata per presentare le tessere all'utente}{38}{lstlisting.3.9}}
\newlabel{lst:controller}{{3.10}{38}{Parte del codice del controller creato per gestire i comandi relativi ai soci. Questa funzione, quando viene chiamata, cerca nel database i soci in base al termine inviato tra i parametri e poi carica una pagina con i risultati}{lstlisting.3.10}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.10}Parte del codice del controller creato per gestire i comandi relativi ai soci. Questa funzione, quando viene chiamata, cerca nel database i soci in base al termine inviato tra i parametri e poi carica una pagina con i risultati.}{38}{lstlisting.3.10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.2}Database}{38}{subsection.3.1.2}}
\newlabel{sec:db}{{3.1.2}{38}{Database}{subsection.3.1.2}{}}
\newlabel{lst:method_chaining}{{3.11}{40}{Esempio di query con \emph {mongoose}. Questa funzione cerca nel database dei soci per l'identificatore passato tra i parametri e poi carica la pagina per aggiornare il socio trovato}{lstlisting.3.11}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.11}Esempio di query con \emph  {mongoose}. Questa funzione cerca nel database dei soci per l'identificatore passato tra i parametri e poi carica la pagina per aggiornare il socio trovato}{40}{lstlisting.3.11}}
\newlabel{lst:add_log_endpoint}{{3.12}{40}{Endpoint per aggiungere i log}{lstlisting.3.12}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.12}Endpoint per aggiungere i log}{40}{lstlisting.3.12}}
\newlabel{lst:saveLog}{{3.13}{41}{Questa funzione aggiunge il log all'interno del database. Il corpo della richiesta POST contiene il log in formato JSON}{lstlisting.3.13}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.13}Questa funzione aggiunge il log all'interno del database. Il corpo della richiesta POST contiene il log in formato JSON}{41}{lstlisting.3.13}}
\newlabel{lst:viewLogs}{{3.14}{41}{Questa funzione viene eseguita quando un browser accede (richiesta GET) all'endpoint \emph {/api/logs/view}}{lstlisting.3.14}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.14}Questa funzione viene eseguita quando un browser accede (richiesta GET) all'endpoint \emph  {/api/logs/view}}{41}{lstlisting.3.14}}
\citation{postman}
\@writefile{lof}{\contentsline {figure}{\numberline {30}{\ignorespaces Il logbook dell'azienda\relax }}{42}{figure.caption.34}}
\newlabel{fig:logbook}{{30}{42}{Il logbook dell'azienda\relax }{figure.caption.34}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.3}RESTful API}{42}{subsection.3.1.3}}
\newlabel{sec:api}{{3.1.3}{42}{RESTful API}{subsection.3.1.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {31}{\ignorespaces Esempio di testing con Postman dell'endpoint relativo all'aggiunta dei log\relax }}{43}{figure.caption.35}}
\newlabel{fig:postman_test}{{31}{43}{Esempio di testing con Postman dell'endpoint relativo all'aggiunta dei log\relax }{figure.caption.35}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Specificazione delle API dell'applicazione\relax }}{44}{table.caption.36}}
\newlabel{tab:api}{{5}{44}{Specificazione delle API dell'applicazione\relax }{table.caption.36}{}}
\citation{w3css_template}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Front-End}{45}{section.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Tecnologie utilizzate}{45}{subsection.3.2.1}}
\newlabel{lst:import_css}{{3.15}{45}{Importazione dei file di stile nel documento HTML}{lstlisting.3.15}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.15}Importazione dei file di stile nel documento HTML}{45}{lstlisting.3.15}}
\citation{eloquent_javascript}
\newlabel{lst:media_query}{{3.16}{46}{Esempio di \emph {media query}}{lstlisting.3.16}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.16}Esempio di \emph  {media query}}{46}{lstlisting.3.16}}
\newlabel{lst:import_javascript}{{3.17}{46}{Importazione dei file .js nel documento HTML}{lstlisting.3.17}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.17}Importazione dei file .js nel documento HTML}{46}{lstlisting.3.17}}
\citation{jquery}
\citation{jquery}
\newlabel{lst:hello_world}{{3.18}{47}{Programmazione a eventi: funzione che scrive \textquotedblleft {} Hello World \textquotedblright {} ogni 3 secondi (in questo caso l'evento è rappresentato dal timer)}{lstlisting.3.18}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.18}Programmazione a eventi: funzione che scrive \textquotedblleft {} Hello World \textquotedblright {} ogni 3 secondi (in questo caso l'evento \IeC {\`e} rappresentato dal timer)}{47}{lstlisting.3.18}}
\@writefile{lof}{\contentsline {figure}{\numberline {32}{\ignorespaces Esempio di gerarchia del DOM in un documento HTML. Immagine sotto licenza CC BY-SA 3.0. Autore: Birger Eriksson. Link: \url  {https://commons.wikimedia.org/wiki/File:DOM-model.svg}\relax }}{48}{figure.caption.40}}
\newlabel{fig:dom}{{32}{48}{Esempio di gerarchia del DOM in un documento HTML. Immagine sotto licenza CC BY-SA 3.0. Autore: Birger Eriksson. Link: \url {https://commons.wikimedia.org/wiki/File:DOM-model.svg}\relax }{figure.caption.40}{}}
\newlabel{lst:delete_socio}{{3.19}{49}{Tecnica AJAX. La funzione, dopo aver premuto il pulsante per rimuovere un socio, manda una richiesta (nel background) del tipo \textquotedblleft {} DELETE \textquotedblright {} all'endpoint \emph {/api/soci/delete/} con l'ID del socio che si desidera cancellare}{lstlisting.3.19}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3.19}Tecnica AJAX. La funzione, dopo aver premuto il pulsante per rimuovere un socio, manda una richiesta (nel background) del tipo \textquotedblleft {} DELETE \textquotedblright {} all'endpoint \emph  {/api/soci/delete/} con l'ID del socio che si desidera cancellare}{49}{lstlisting.3.19}}
\citation{mongodb_32bit_limitations}
\citation{tumbleweed}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Analisi e Conclusioni}{50}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{cap4}{{4}{50}{Analisi e Conclusioni}{chapter.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Problemi affrontati}{50}{section.4.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}Incompatibilit\IeC {\`a} tra Raspbian e le ultime versioni di MongoDB}{50}{subsection.4.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.2}Problema di sicurezza all'interno della rete locale}{50}{subsection.4.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.3}Disattivazione delle tessere dei soci non pi\IeC {\`u} iscritti}{51}{subsection.4.1.3}}
\newlabel{lst:scheduler}{{4.1}{51}{Implementazione di uno scheduler che disattiva automaticamente le tessere non rinnovate. Questa funzione viene eseguita una volta all'anno e disattiva tutte le tessere ancora attivate e non iscritte all'anno corrente}{lstlisting.4.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4.1}Implementazione di uno scheduler che disattiva automaticamente le tessere non rinnovate. Questa funzione viene eseguita una volta all'anno e disattiva tutte le tessere ancora attivate e non iscritte all'anno corrente.}{51}{lstlisting.4.1}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Possibili miglioramenti}{52}{section.4.2}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Conclusioni}{52}{section.4.3}}
\bibcite{sistemi_embedded_atrent}{1}
\bibcite{smart_objects}{2}
\bibcite{RTClib}{3}
\bibcite{esp_ds}{4}
\bibcite{uno_specs}{5}
\bibcite{servo}{6}
\bibcite{softwareserial_lib}{7}
\bibcite{arduino_storia}{8}
\bibcite{wire}{9}
\bibcite{bodyparser}{10}
\bibcite{ejs}{11}
\bibcite{at_fw}{12}
\bibcite{express}{13}
\bibcite{controllo_accessi}{14}
\bibcite{eloquent_javascript}{15}
\bibcite{lcd_lib}{16}
\bibcite{IoT}{17}
\bibcite{keypad_lib}{18}
\bibcite{jquery}{19}
\bibcite{rfid_lib}{20}
\bibcite{mongodb_32bit_limitations}{21}
\bibcite{mongodb_driver}{22}
\bibcite{mongodb}{23}
\bibcite{mongoose}{24}
\bibcite{javascript}{25}
\bibcite{nodejs}{26}
\bibcite{path}{27}
\bibcite{tumbleweed}{28}
\bibcite{postman}{29}
\bibcite{crescita_controllo_accessi}{30}
\bibcite{raspbian}{31}
\bibcite{i2c_vs_spi}{32}
\bibcite{rf}{33}
\bibcite{jquery}{34}
\bibcite{w3css_template}{35}
